What is devops?

Devops is the approach that combines software development and operations to achieve efficient dev, delivery and deployment of software. The primary objective is to foster teamwork between the dev team and the ops team. In addition, processes
like automation, continuous integration, delivery, deployment, monitoring and feedback are also used to speed up delivery whilst reducing mistakes. All these will increase software quality, teams agility , productivity via quicker release
cycles and enhance team cooperation


What is a devops engineer?

A devops engineer is one that collaborates closely with software engineers and the operations team to implement continuous integration and continuous development so as to improve software quality and delivery efficiency. They are proficient
it development, automation, scripting and cloud computing. They are also adept in source control management, visualisation, deployment, virtualisation, containerisation, logging and monitoring tools.


What are the requirements of a devops engineer?

Excellent technological background, experience in devops tools and methodologies, scripting and automation, and cloud computing experience


What do you know about Devops?

Explain the importance of devops in the industry, how they synergise operations and development teams to accelerate delivery while reducing failures, Devops walks a product through an entire software developement lifecycle.


Agile vs devops?

Devops is a culture that allows swes and ops teams to work together, resulting in continuous software developement, deployment, testing, monitoring and integrations. Agile is about small incremental and rapid software releases to address
conflicts between customer feedback and developers


What are the popular devops tools?

Selenium, Puppet, Chef, Git, Jenkins, Ansible, and docker


What are the different phases of devops?

Plan, build, test, integrate, deploy, operate monitor


Benefits of Devops?

Continous deployment, stable environment, faster detection of defects, less complex problem, faster delivery, improve collaboration


How would you approach a project?

Assess existing process and identify areas of improvement
Come up with a PoC for approval
Begin with version control, testing, integration, deployment, delivery, monitoring


What is the difference between continuous delivery and continous deployment
continuous delivery: code is always in deployable state, every change commited goes through pipeline of building, testing, and staging, manual approval is required before change is made
continuous deployment: code is always in deployable state, every change must pass tests in order to go into production, process is entirely automated, continuous monitoring and rollback is preferred as opposed to manual checks